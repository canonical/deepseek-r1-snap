#!/bin/bash -eu

tag="snap.$SNAP_INSTANCE_NAME.install"
log()
{
    # Going to journal
    logger --tag=$tag "$1"
    # Printed to stderr on non-zero exit
    echo "$1"
}

install_component()
{
    component=$1

    handle_err()
    {
        log "Snapctl: $output"
        if [[ $output =~ "cannot install components for a snap that is unknown to the store" ]]; then
            log "Skip component installation. Install a local build: sudo snap install $SNAP_INSTANCE_NAME+<path to $component>"
        else
            # Unexpected error
            exit 1
        fi
    }

    trap 'handle_err $?' ERR

    set +e
    # This only sends an async request.
    # The installation happens at a later stage during the installation.
    output=$(snapctl install "+$component" 2>&1)
    exit_code=$?
    set -e
}

# Redirect standard errors to both stderr and syslog
exec 2> >(logger --stderr --tag=$tag)

hw_info="$($SNAP/bin/hardware-info)"

stack="$(echo "$hw_info" | $SNAP/bin/select-stack --stacks=$SNAP/stacks)"
log "Selected stack: $stack"

#
# Configure and install the stack
#

snapctl set stack="$(echo "$stack" | jq .name --raw-output)"

echo $stack | jq .components[] --compact-output --raw-output | while read -r component; do
    if [[ $component == model* ]]; then
        snapctl set model=$component
    else
        snapctl set engine=$component
    fi

    log "Request installing component: $component"
    install_component $component
done
