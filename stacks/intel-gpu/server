#!/bin/bash -eu

# TODO
# Can most of this script move to the engine component?

engine="$SNAP_COMPONENTS/$(snapctl get engine)"
model="$SNAP_COMPONENTS/$(snapctl get model)"

if [ ! -d "$model" ]; then
    echo "Missing component: $model"
    exit 1
fi

source "$model/init" # exports MODEL_CONFIG

if [ ! -d "$engine" ]; then
    echo "Missing component: $engine"
    exit 1
fi


port="$(snapctl get http.port)"
host="$(snapctl get http.host)"

# Reference for environment set up
# https://github.com/canonical/openvino-ai-plugins-gimp-snap/blob/be8968938844436e48a1a94643c8e95b43062653/snap/snapcraft.yaml#L54-L58

# Add staged shared objects
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$engine/lib:$engine/lib/python:$SNAP/usr/local/lib"
# GPU libraries
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$engine/usr/lib/$ARCH_TRIPLET"
# NPU libraries
# export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$SNAP/npu-libs"

export OCL_ICD_VENDORS="$SNAP/etc/OpenCL/vendors"

export PYTHONPATH="$engine/lib/python:$engine/lib/python3.12/site-packages"


# target_device="$(snapctl get target-device)"
# if [ ! -z "$target_device" ]; then
#     echo "target-device configuration not set!"
#     exit 1
# fi
# echo "Target device: $target_device"

# # Replace the target device type in config file, 
# # until OVMS fixes the issue with processing --target-device
# # --target_device TARGET_DEVICE
# #   Target device to run the inference (default: CPU)
# mediapipe_graph=/tmp/graph.pbtxt
# model_config="/tmp/config.json"
# sed 's/device: .*/device: "'"$target_device"'",/' \
#     $model/models/*/graph.pbtxt \
#     > $mediapipe_graph
# jq '.mediapipe_config_list[0].graph_path = "'$mediapipe_graph'"' \
#     config.json \
#     > $model_config

# Override the model config path if user has set one
# The model config file includes paths to the model files
user_config="$(snapctl get model-config)"
if [ -n "$user_config" ]; then
    if [ ! -f "$user_config" ]; then
        echo "Missing given model config file: $model_config"
        exit 1
    fi
    MODEL_CONFIG="$user_config"
fi

echo "Using model config: $MODEL_CONFIG"

$engine/bin/ovms --rest_port "$port" --rest_bind_address "$host" --config_path "$MODEL_CONFIG"
